<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="exps">
	<!-- 삭제 -->
	<delete id="delete" parameterType="ExpsDto">
		DELETE FROM tb_exps
		WHERE num = #{num} AND id = #{id}
	</delete>
	
	<!-- DB 삭제 -->
	<delete id="deleteAll" parameterType="String">
		DELETE FROM tb_exps
		WHERE  id = #{id}
	</delete>
	
	<!-- 수정 -->
	<update id="update" parameterType="ExpsDto">
		UPDATE tb_exps
		SET position = #{position}, place = #{place}, ex_exp = #{ex_exp}, start_date = #{start_date}, end_date = #{end_date}
		WHERE num=#{num} and id = #{id}
	</update>
	
	<!-- 목록 리턴 -->
	<select id="getList" parameterType="String"
		resultType="ExpsDto">
		SELECT num, id, position, place, ex_exp, TO_CHAR(start_date, 'YYYY-MM-DD') start_date, TO_CHAR(end_date,'YYYY-MM-DD') end_date
		FROM tb_exps
		WHERE id = #{id}
	</select>
	
	<!-- 추가 -->
	<insert id="insert" parameterType="ExpsDto">
		INSERT INTO tb_exps
		(num, id, position, place, ex_exp, start_date, end_date)
		VALUES(exps_seq.NEXTVAL, #{id}, #{position}, #{place}, #{ex_exp}, #{start_date}, #{end_date})
	</insert>
	<!-- getData -->
	<select id="getData" parameterType="int"
		resultType="ExpsDto">
		SELECT num, id, position, place, ex_exp, TO_CHAR(start_date, 'YYYY-MM-DD') start_date, TO_CHAR(end_date,'YYYY-MM-DD') end_date
		FROM tb_exps
		WHERE  num=#{num}
	</select>
	
	<!-- 경력 아이디 리스트 -->
	<select id="oldList" resultType="ExpsDto">
		select distinct id from tb_exps
	</select>
	<!-- 신입 아이디 리스트 -->
	<select id="newList" resultType="ExpsDto">
		select id
		from(
		select tb_edu.id eid, nvl(tb_user.id,null) id
		from tb_user left outer join tb_edu
		on tb_user.id =tb_edu.id)
		where eid is null
	</select>
</mapper>



