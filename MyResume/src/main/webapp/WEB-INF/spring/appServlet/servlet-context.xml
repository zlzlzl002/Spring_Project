<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DB 접속 정보를 가지고 있는 문서 읽어들이기 -->
	<beans:bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location">
			<beans:value>classpath:com/project/myresume/mybatis/db.properties
			</beans:value>
		</beans:property>
	</beans:bean>
	<!-- DataSource 설정 -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<beans:property name="driverClass" value="${driver}" />
		<beans:property name="url" value="${url}" />
		<beans:property name="username" value="${username}" />
		<beans:property name="password" value="${password}" />
	</beans:bean>
	<!-- SqlSessionFactory 객체 -->
	<beans:bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation"
			value="classpath:com/project/myresume/mybatis/Configuration.xml" />
	</beans:bean>


	<!-- Dao 에 주입해줄 SqlSession 인터페이스를 구현한 SqlSessionTemplate 객체 -->
	<beans:bean class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg name="sqlSessionFactory"
			ref="sessionFactory" />
	</beans:bean>

	<!-- 1월 30일 Transcation Manager 설정 -->
	<beans:bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<!-- 1월30일 어노테이션으로 트렌젝션 처리 하도록 설정 -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- Multipart 폼 전송을 처리하기 위한 bean -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10240000" />
	</beans:bean>

	<!-- Abstract view 가 동작하도록 설정 -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0" />
	</beans:bean>

	<!-- google Class Bean설정 추가 -->
	<!-- 클라이언트ID와 보안비밀 세팅 -->
	<beans:bean id="googleConnectionFactory"
		class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg
			value="113993238665-i6jl1rsjflkouc6klce2a9oskqqrbnih.apps.googleusercontent.com" />
		<beans:constructor-arg value="2MKwtTN3GD2NE4m-kBzQjRvk" />
	</beans:bean>
	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<beans:bean id="googleOAuth2Parameters"
		class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope"
			value="https://www.googleapis.com/auth/plus.login https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email" />
			
		<beans:property name="redirectUri"
			value="http://localhost:8888/myresume/users/oauth2callback.do" />
	</beans:bean>

	<context:component-scan base-package="com.project.myresume" />
	<context:component-scan base-package="com.test.sts" />
	<context:component-scan base-package="com.project.myresume.aspect" />
	<context:component-scan base-package="com.project.myresume.util" />

	<context:component-scan base-package="com.project.myresume.users.*" />
	<context:component-scan base-package="com.project.myresume.file.*" />
	<context:component-scan base-package="com.project.myresume.profile.*" />
	<context:component-scan base-package="com.project.myresume.cafe.*" />
	<context:component-scan base-package="com.project.myresume.search.*" />


	<aop:aspectj-autoproxy/>

</beans:beans>










